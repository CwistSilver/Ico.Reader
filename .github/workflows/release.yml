on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1
    
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    
    # - name: Set VERSION variable from tag
    #   run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    - name: Set VERSION variable from tag
      run: echo "VERSION=1.0.0" >> $GITHUB_ENV

    - name: Restore
      run: dotnet restore Ico.Reader/Ico.Reader.csproj
    
    - name: Build and Pack
      run: dotnet build Ico.Reader/Ico.Reader.csproj --configuration Release --no-restore /p:Version=${VERSION} --output .
    
    - name: Verify NuGet package contains PeDecoder.dll
      run: |
        echo "Paket-Inhalt (lib/netstandard2.1):"
        unzip -l ./Ico.Reader.${VERSION}.nupkg | grep 'lib/netstandard2.1/'
        echo "üîç Pr√ºfe auf PeDecoder.dll:"
        unzip -l ./Ico.Reader.${VERSION}.nupkg | grep 'lib/netstandard2.1/PeDecoder.dll' || (echo "PeDecoder.dll not found in package" && exit 1)

  
    # - name: Push
    #   run: dotnet nuget push Ico.Reader.${VERSION}.nupkg --source https://nuget.pkg.github.com/CwistSilver/index.json --api-key ${GITHUB_TOKEN}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # - name: Push to nuget.org
    #   run: dotnet nuget push Ico.Reader.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_ORG_API_KEY }}
